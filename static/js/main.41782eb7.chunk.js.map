{"version":3,"sources":["icons/logo.svg","components/Authorization/Autorization.jsx","sounds/sound1.wav","sounds/sound2.wav","components/Field/Field.jsx","components/Board/Board.jsx","components/Game/Game.jsx","App.jsx","index.js"],"names":["Authorization","className","src","logo","alt","type","placeholder","React","memo","playSound","sound","player","Audio","preload","play","Field","color","id","setCheckedFieldsPerTurn","checkedFieldsTotal","useState","isChecked","setChecked","classNames","some","element","dataset","buttonNumber","value","onClick","event","sound2","sound1","prev","filter","target","data-button-number","Board","squares","map","count","getShuffledColors","arr","j","temp","arrCopy","i","length","Math","floor","random","shuffle","divider","colors","args","Error","forEach","concat","repeat","trim","split","customFill","getSquares","Game","setSquares","checkedFieldsPerTurn","setCheckedFieldsTotal","useEffect","disabled","every","item","App","path","exact","Autorization","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41782eb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.88baa581.svg\";","import React from 'react';\n\nimport logo from '../../icons/logo.svg';\n\nimport './Authorization.scss';\nimport '../blocks/button.scss';\n\nconst Authorization = () => (\n  <div className=\"authorization\">\n    <img\n      src={logo}\n      alt=\"logo\"\n      className=\"authorization__logo\"\n    />\n\n    <p>\n      Введите своё имя\n    </p>\n\n    <input\n      type=\"text\"\n      placeholder=\"Имя\"\n      className=\"authorization__login-field\"\n    />\n\n    <button\n      type=\"button\"\n      className=\"authorization__button button\"\n    >\n      Продолжить\n    </button>\n  </div>\n);\n\nexport default React.memo(Authorization);\n","export default __webpack_public_path__ + \"static/media/sound1.28d0f02a.wav\";","export default __webpack_public_path__ + \"static/media/sound2.80f01a1b.wav\";","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport sound1 from '../../sounds/sound1.wav';\nimport sound2 from '../../sounds/sound2.wav';\n\nimport './Field.scss';\n\nconst playSound = (sound) => {\n  const player = new Audio(sound);\n\n  player.preload = 'auto';\n  player.play();\n};\n\nconst Field = ({\n  color, id, setCheckedFieldsPerTurn, checkedFieldsTotal,\n}) => {\n  const [isChecked, setChecked] = useState(false);\n\n  const handleClickChoose = (event) => {\n    if (isChecked) {\n      playSound(sound2);\n    } else {\n      playSound(sound1);\n    }\n\n    setCheckedFieldsPerTurn((prev) => {\n      if (isChecked) {\n        return prev.filter((element) => element !== event.target);\n      }\n\n      return [...prev, event.target];\n    });\n\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        color,\n        { 'Field--checked': isChecked },\n        {\n          'Field--hidden': checkedFieldsTotal.some(\n            (element) => +element.dataset.buttonNumber === id,\n          ),\n        },\n        'Field',\n      )}\n      value={color}\n      onClick={handleClickChoose}\n      data-button-number={id}\n    />\n  );\n};\n\nField.propTypes = {\n  color: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  setCheckedFieldsPerTurn: PropTypes.func.isRequired,\n  checkedFieldsTotal: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default React.memo(Field);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Field from '../Field/Field';\n\nimport './Board.scss';\n\nconst Board = ({ checkedFieldsTotal, squares, setCheckedFieldsPerTurn }) => (\n  <div className=\"Board\">\n    {squares.map(({ id, color }) => (\n      <Field\n        id={id}\n        color={color}\n        setCheckedFieldsPerTurn={setCheckedFieldsPerTurn}\n        checkedFieldsTotal={checkedFieldsTotal}\n        key={id}\n      />\n    ))}\n  </div>\n);\n\nBoard.propTypes = {\n  squares: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n  })).isRequired,\n  setCheckedFieldsPerTurn: PropTypes.func.isRequired,\n  checkedFieldsTotal: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default React.memo(Board);\n","import React, { useEffect, useState } from 'react';\n\nimport logo from '../../icons/logo.svg';\nimport Board from '../Board/Board';\n\nimport './Game.scss';\n\nlet count = 0;\n\nconst setSquareNumber = () => {\n  count += 1;\n\n  return count;\n};\n\nconst customFill = (divider = ' ', ...args) => {\n  let colors = [];\n\n  if (args.length !== 5) {\n    throw new Error('Should be 5 colors!');\n  }\n\n  args.forEach((element) => {\n    colors = colors.concat((element + divider).repeat(5).trim().split(divider));\n  });\n\n  return colors;\n};\n\nfunction shuffle(arr) {\n  let j;\n  let temp;\n\n  const arrCopy = [...arr];\n\n  for (let i = arrCopy.length - 1; i > 0; i -= 1) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = arrCopy[j];\n    arrCopy[j] = arrCopy[i];\n    arrCopy[i] = temp;\n  }\n\n  return arrCopy;\n}\n\nconst getShuffledColors = () => (\n  shuffle(customFill(' ', 'green', 'red', 'blue', 'pink', 'orange'))\n);\n\nconst getSquares = (colors) => {\n  const result = colors.map((color) => ({\n    color,\n    id: setSquareNumber(),\n  }));\n\n  return result;\n};\n\nconst Game = () => {\n  const [squares, setSquares] = useState([]);\n  const [checkedFieldsPerTurn, setCheckedFieldsPerTurn] = useState([]);\n  const [checkedFieldsTotal, setCheckedFieldsTotal] = useState([]);\n\n  useEffect(() => {\n    setSquares(getSquares(getShuffledColors()));\n  }, []);\n\n  const handleClickShuffle = () => {\n    count = 0;\n\n    setSquares(getSquares(getShuffledColors()));\n    setCheckedFieldsTotal([]);\n  };\n\n  const handleClickCheck = () => {\n    const color = checkedFieldsPerTurn[0].value;\n\n    if (checkedFieldsPerTurn.every((item) => item.value === color)) {\n      setCheckedFieldsTotal(\n        (prev) => [...prev, ...checkedFieldsPerTurn],\n      );\n    }\n\n    setCheckedFieldsPerTurn([]);\n  };\n\n  return (\n    <div className=\"Game\">\n      <img\n        src={logo}\n        alt=\"\"\n        className=\"Game__logo\"\n      />\n\n      <button\n        className=\"button button--shuffle\"\n        type=\"button\"\n        onClick={handleClickShuffle}\n      >\n        Перемешать\n      </button>\n\n      <div className=\"Game__timer\">\n        10:30\n      </div>\n\n      <Board\n        squares={squares}\n        setCheckedFieldsPerTurn={setCheckedFieldsPerTurn}\n        checkedFieldsTotal={checkedFieldsTotal}\n      />\n\n      <button\n        type=\"button\"\n        className={\n          `button Game__button-check ${checkedFieldsPerTurn.length < 2 ? 'gray' : 'blue'}`\n        }\n        disabled={checkedFieldsPerTurn.length < 2}\n        onClick={handleClickCheck}\n      >\n        Проверить\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"button Game__button-complete\"\n      >\n        Завершить\n      </button>\n    </div>\n  );\n};\n\nexport default React.memo(Game);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Autorization from './components/Authorization/Autorization';\nimport Game from './components/Game/Game';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/game\">\n        <Game />\n      </Route>\n\n      <Route path=\"/\" exact>\n        <Autorization />\n      </Route>\n\n      <p>page not found</p>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}